<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.productivity.web.mapper.WorkIncomeDetailMapper" >
  <resultMap id="BaseResultMap" type="com.productivity.web.entity.WorkIncomeDetail" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="income_id" property="incomeId" jdbcType="INTEGER" />
    <result column="one_price" property="onePrice" jdbcType="DOUBLE" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="commodity_id" property="commodityId" jdbcType="INTEGER" />
    <result column="commodity_name" property="commodityName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, income_id, one_price, count, total_price, commodity_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from work_income_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="listWorkIncomeDetail" resultMap="BaseResultMap">
    select
     t.*,t1.commodity_name
    from work_income_detail t
    left join work_commodity t1 on t.commodity_id = t1.id
    where income_id = #{incomeId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from work_income_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByIncomeId">
    delete from work_income_detail where income_id = #{incomeId}
  </delete>
  <insert id="insert" parameterType="com.productivity.web.entity.WorkIncomeDetail" >
    insert into work_income_detail (id, income_id, one_price, 
      count, total_price, commodity_id
      )
    values (#{id,jdbcType=INTEGER}, #{incomeId,jdbcType=INTEGER}, #{onePrice,jdbcType=DOUBLE}, 
      #{count,jdbcType=INTEGER}, #{totalPrice,jdbcType=DOUBLE}, #{commodityId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.productivity.web.entity.WorkIncomeDetail" >
    insert into work_income_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="incomeId != null" >
        income_id,
      </if>
      <if test="onePrice != null" >
        one_price,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="commodityId != null" >
        commodity_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="incomeId != null" >
        #{incomeId,jdbcType=INTEGER},
      </if>
      <if test="onePrice != null" >
        #{onePrice,jdbcType=DOUBLE},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="commodityId != null" >
        #{commodityId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.productivity.web.entity.WorkIncomeDetail" >
    update work_income_detail
    <set >
      <if test="incomeId != null" >
        income_id = #{incomeId,jdbcType=INTEGER},
      </if>
      <if test="onePrice != null" >
        one_price = #{onePrice,jdbcType=DOUBLE},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="commodityId != null" >
        commodity_id = #{commodityId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.productivity.web.entity.WorkIncomeDetail" >
    update work_income_detail
    set income_id = #{incomeId,jdbcType=INTEGER},
      one_price = #{onePrice,jdbcType=DOUBLE},
      count = #{count,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=DOUBLE},
      commodity_id = #{commodityId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>